// Code generated by protoc-gen-go-cloudfunction. DO NOT EDIT.

package wibuzonev1

import (
	"context"
	"net/http"
	"github.com/aiocean/cfutil"
)

type UnlikeWallpaperHandlerFunc = func(context.Context, *UnlikeWallpaperRequest) (*UnlikeWallpaperResponse, error)

func UnlikeWallpaperHandler(w http.ResponseWriter, r *http.Request, do UnlikeWallpaperHandlerFunc) {
	if err := cfutil.ApplyCors(w, r); err != nil {
		cfutil.WriteError(w, r, http.StatusInternalServerError, err)
		return
	}
	if err := cfutil.ApplyContentType(w, r); err != nil {
		cfutil.WriteError(w, r, http.StatusInternalServerError, err)
		return
	}
	var request UnlikeWallpaperRequest
	if err := cfutil.ReadRequest(r, &request); err != nil {
		cfutil.WriteError(w, r, http.StatusBadRequest, err)
		return
	}
	response, err := do(r.Context(), &request)
	if err != nil {
		cfutil.WriteError(w, r, http.StatusInternalServerError, err)
		return
	}
	if err := cfutil.WriteResponse(w, r, response); err != nil {
		cfutil.WriteError(w, r, http.StatusInternalServerError, err)
	}
}

type LikeWallpaperHandlerFunc = func(context.Context, *LikeWallpaperRequest) (*LikeWallpaperResponse, error)

func LikeWallpaperHandler(w http.ResponseWriter, r *http.Request, do LikeWallpaperHandlerFunc) {
	if err := cfutil.ApplyCors(w, r); err != nil {
		cfutil.WriteError(w, r, http.StatusInternalServerError, err)
		return
	}
	if err := cfutil.ApplyContentType(w, r); err != nil {
		cfutil.WriteError(w, r, http.StatusInternalServerError, err)
		return
	}
	var request LikeWallpaperRequest
	if err := cfutil.ReadRequest(r, &request); err != nil {
		cfutil.WriteError(w, r, http.StatusBadRequest, err)
		return
	}
	response, err := do(r.Context(), &request)
	if err != nil {
		cfutil.WriteError(w, r, http.StatusInternalServerError, err)
		return
	}
	if err := cfutil.WriteResponse(w, r, response); err != nil {
		cfutil.WriteError(w, r, http.StatusInternalServerError, err)
	}
}
